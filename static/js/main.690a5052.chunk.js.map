{"version":3,"sources":["shared/helpers/date-helpers.js","constants/local-path.js","shared/helpers/id-helpers.js","providers/match-provider.js","components/matcher-page/matcher-page.jsx","helpers/match-helpers.js","components/not-found-page/not-found-page.jsx","components/app/app.jsx","index.js"],"names":["module","exports","formatDate","date","getFullYear","toString","getMonth","padStart","getDate","formatTimestamp","withMilliseconds","getHours","getMinutes","getSeconds","getMilliseconds","formatTimespan","totalMilliseconds","milliseconds","Math","floor","totalSeconds","seconds","totalMinutes","minutes","LocalPath","INDEX","MATCHER","MATCH_ALL","nanoid","require","matchProvider","constructor","this","_client","axios","create","timeout","buildURL","endpoint","requestId","engineValues","text","pattern","flagsValue","data","request","method","url","params","EMPTY_RESULTS","Flag","IGNORE_CASE","title","value","SINGLE_LINE","MULTILINE","Engine","BROWSER_JS","NODE_JS","PHP","PYTHON","RUBY","DOTNET","JVM","createToggle","Enumeration","toggledItem","previousItems","shouldExclude","includes","Object","values","filter","item","submitMatchAll","async","localEngineValue","remoteEngineValues","engineValue","results","result","patternValue","regexp","RegExp","it","matchAll","matches","Array","from","map","index","substring","exception","error","message","localMatchAll","push","length","remoteData","MatcherPage","engines","setEngines","React","useState","setText","setPattern","flags","setFlags","setResults","setRequestId","requestIdRef","useRef","useEffect","className","action","engine","type","name","checked","onChange","disabled","rows","evt","currentTarget","htmlFor","id","flag","onClick","preventDefault","localRequestId","isSafe","Date","generateId","join","current","then","localResults","undefined","catch","subtitle","find","findEngineByValue","match","matchIndex","NotFoundPage","to","App","exact","path","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.690a5052.chunk.js","sourcesContent":["function formatDate(date) {\n  return date.getFullYear().toString(10)\n    + `-` + (date.getMonth() + 1).toString(10).padStart(2, `0`)\n    + `-` + date.getDate().toString(10).padStart(2, `0`);\n}\n\nfunction formatTimestamp(date, withMilliseconds) {\n  if (typeof (withMilliseconds) === `undefined`) {\n    withMilliseconds = true;\n  }\n  return date.getFullYear().toString(10)\n    + `-` + (date.getMonth() + 1).toString(10).padStart(2, `0`)\n    + `-` + date.getDate().toString(10).padStart(2, `0`)\n    + ` ` + date.getHours().toString(10).padStart(2, `0`)\n    + `:` + date.getMinutes().toString(10).padStart(2, `0`)\n    + `:` + date.getSeconds().toString(10).padStart(2, `0`)\n    + (withMilliseconds ? (`.` + date.getMilliseconds().toString(10).padStart(3, `0`)) : ``);\n}\n\nfunction formatTimespan(totalMilliseconds) {\n  const milliseconds = Math.floor(totalMilliseconds % 1000);\n  const totalSeconds = Math.floor(totalMilliseconds / 1000);\n  const seconds = totalSeconds % 60;\n  const totalMinutes = Math.floor(totalSeconds / 60);\n  const minutes = totalMinutes % 60;\n  const totalHours = Math.floor(totalMinutes / 60);\n\n  return totalHours.toString().padStart(2, 0)\n    + `:` + minutes.toString().padStart(2, 0)\n    + `:` + seconds.toString().padStart(2, 0)\n    + `.` + milliseconds.toString().padStart(3, 0);\n}\n\nmodule.exports = {\n  formatDate,\n  formatTimestamp,\n  formatTimespan,\n};\n","/** @enum */\nexport const LocalPath = {\n  INDEX: `/`,\n  MATCHER: `/`,\n  MATCH_ALL: `/match-all`\n};\n","const {nanoid} = require(`nanoid`);\n\nconst {formatTimestamp} = require(`./date-helpers`);\n\nconst generateId = ({isSafe = true}) => {\n  return isSafe\n    ? nanoid()\n    : formatTimestamp(new Date());\n};\n\nexport {\n  generateId,\n};\n","import axios from 'axios';\n\nconst REQUEST_TIMEOUT = 5000;\n\nclass MatchProvider {\n  constructor() {\n    this._client = axios.create({\n      timeout: REQUEST_TIMEOUT,\n    });\n  }\n\n  buildURL(endpoint) {\n    return `${process.env.REACT_APP_API_BASE_URL}/${endpoint}`;\n  }\n\n  /**\n   * @param {string} requestId\n   * @param {string[]} engineValues\n   * @param {string} text\n   * @param {string} pattern\n   * @param {string} flagsValue\n   * @return {Promise<{matches: string[], error: {message: string}}>}\n   */\n  async matchAll(requestId, engineValues, text, pattern, flagsValue) {\n    const {data} = await this._client.request({\n      method: `post`,\n      url: this.buildURL(`match-all`),\n      params: {\n        requestId,\n      },\n      data: {\n        engineValues,\n        text,\n        pattern,\n        flagsValue,\n      },\n    });\n    return data;\n  }\n}\n\nexport const matchProvider = new MatchProvider();\n","import React from 'react';\n\nimport {LocalPath} from 'constants/local-path';\nimport {localMatchAll} from 'helpers/match-helpers';\nimport {generateId} from 'shared/helpers/id-helpers';\nimport {matchProvider} from 'providers/match-provider';\n\nconst ALL_ENGINES_KEY = `all`;\nconst REMOTE_ENGINES_KEY = `remote`;\nconst EMPTY_RESULTS = [];\n\n/** @enum */\nconst Flag = {\n  IGNORE_CASE: {\n    title: `Ignore Case`,\n    value: `i`,\n  },\n  SINGLE_LINE: {\n    title: `Single Line`,\n    value: `s`,\n  },\n  MULTILINE: {\n    title: `Multiline`,\n    value: `m`,\n  },\n};\n\n/** @enum */\nconst Engine = {\n  BROWSER_JS: {\n    title: `JavaScript (browser)`,\n    value: `browser-js`,\n  },\n  NODE_JS: {\n    title: `JavaScript (node.js)`,\n    value: `node-js`,\n  },\n  PHP: {\n    title: `PHP`,\n    value: `php`,\n  },\n  PYTHON: {\n    title: `Python`,\n    value: `python`,\n  },\n  RUBY: {\n    title: `Ruby`,\n    value: `ruby`,\n  },\n  DOTNET: {\n    title: `.NET (C#)`,\n    value: `dotnet`,\n  },\n  JVM: {\n    title: `JVM (Kotlin)`,\n    value: `jvm`,\n  },\n};\n\nconst findEngineByValue = (engineValue) => {\n  return Object.values(Engine).find((engine) => engine.value === engineValue);\n};\n\nconst createToggle = (Enumeration, toggledItem) => {\n  return (previousItems) => {\n    const shouldExclude = previousItems.includes(toggledItem);\n\n    return Object.values(Enumeration).filter((item) => {\n      return shouldExclude\n        ? (previousItems.includes(item) && item !== toggledItem)\n        : (previousItems.includes(item) || item === toggledItem);\n    });\n  };\n};\n\nconst submitMatchAll = async (requestId, engineValues, text, pattern, flagsValue) => {\n  const localEngineValue = Engine.BROWSER_JS.value;\n  const remoteEngineValues = engineValues.filter((engineValue) => engineValue !== Engine.BROWSER_JS.value);\n\n  const results = [];\n  if (engineValues.includes(localEngineValue)) {\n    const result = localMatchAll(localEngineValue, text, pattern, flagsValue);\n    results.push(result);\n  }\n  if (remoteEngineValues.length > 0) {\n    try {\n      const remoteData = await matchProvider.matchAll(requestId, remoteEngineValues, text, pattern, flagsValue);\n      results.push(...remoteData.results);\n    } catch (exception) {\n      results.push({engineValue: REMOTE_ENGINES_KEY, error: {message: exception.message}});\n    }\n  }\n  return results;\n};\n\nconst MatcherPage = () => {\n  const [engines, setEngines] = React.useState(Object.values(Engine));\n  const [text, setText] = React.useState(``);\n  const [pattern, setPattern] = React.useState(``);\n  const [flags, setFlags] = React.useState([]);\n  const [results, setResults] = React.useState(EMPTY_RESULTS);\n  const [requestId, setRequestId] = React.useState();\n  const requestIdRef = React.useRef();\n\n  const onEnginesChange = (toggledEngine) => {\n    setEngines(createToggle(Engine, toggledEngine));\n  };\n\n  const onFlagsChange = (toggledFlag) => {\n    setFlags(createToggle(Flag, toggledFlag));\n  };\n\n  const onSubmitClick = (evt) => {\n    evt.preventDefault();\n\n    const localRequestId = generateId({isSafe: false});\n    const engineValues = engines.map((engine) => engine.value);\n    const flagsValue = flags.map((flag) => flag.value).join(``);\n\n    setRequestId(requestIdRef.current = localRequestId);\n    setResults(EMPTY_RESULTS);\n\n    submitMatchAll(localRequestId, engineValues, text, pattern, flagsValue)\n      .then((localResults) => {\n        if (requestIdRef.current === localRequestId) {\n          setResults(localResults);\n          setRequestId(requestIdRef.current = undefined);\n        }\n      })\n      .catch(() => {\n        if (requestIdRef.current === localRequestId) {\n          setRequestId(requestIdRef.current = undefined);\n        }\n      });\n  };\n\n  React.useEffect(() => {\n    setResults(EMPTY_RESULTS);\n  }, [engines, text, pattern, flags]);\n\n  return <>\n    <main className=\"matcher-page\">\n      <h1>Regular Expression Pattern Matcher</h1>\n\n      <div className=\"matcher-page__inner\">\n        <form method=\"post\" action={LocalPath.MATCH_ALL}>\n          <fieldset className=\"matcher-page__item\">\n            <legend className=\"matcher-page__item-title\">Engines</legend>\n            {Object.values(Engine).map((engine) => {\n              return (\n                <label key={engine.value} className=\"matcher-page__checkbox-label\">\n                  <input\n                    type=\"checkbox\"\n                    name=\"engines\"\n                    value={engine.value}\n                    checked={engines.includes(engine)}\n                    onChange={() => onEnginesChange(engine)}\n                    disabled={engine.disabled}\n                  />\n                  {engine.title}\n                </label>\n              );\n            })}\n          </fieldset>\n\n          <div className=\"matcher-page__item\">\n            <label className=\"matcher-page__item-title\">Text</label>\n            <textarea\n              name=\"text\"\n              rows=\"3\"\n              value={text}\n              onChange={(evt) => setText(evt.currentTarget.value)}\n            />\n          </div>\n\n          <div className=\"matcher-page__item\">\n            <label htmlFor=\"matcher-pattern\" className=\"matcher-page__item-title\">Pattern (regular expression)</label>\n            <div className=\"matcher-page__pattern-inner\">\n              <input\n                id=\"matcher-pattern\"\n                type=\"text\"\n                name=\"pattern\"\n                value={pattern}\n                onChange={(evt) => setPattern(evt.currentTarget.value)}\n              />\n            </div>\n          </div>\n\n          <fieldset className=\"matcher-page__item\">\n            {Object.values(Flag).map((flag) => {\n              return (\n                <label key={flag.value} className=\"matcher-page__checkbox-label\">\n                  <input\n                    type=\"checkbox\"\n                    name=\"flags\"\n                    value={flag.value}\n                    checked={flags.includes(flag)}\n                    onChange={() => onFlagsChange(flag)}\n                  />\n                  {flag.title} (/{flag.value})\n                </label>\n              );\n            })}\n          </fieldset>\n\n          <button\n            type=\"submit\"\n            disabled={engines.length === 0}\n            onClick={onSubmitClick}\n          >\n            Match All\n          </button>\n        </form>\n\n        <ul className=\"matcher-page__results\">\n          {engines.length === 0 && (\n            <li key={ALL_ENGINES_KEY} className=\"matcher-page__item\">\n              <h2 className=\"matcher-page__item-title\">Error</h2>\n              <span>No engines checked. Please select one...</span>\n            </li>\n          )}\n          {engines.length > 0 && results.length === 0 && (\n            <li key={ALL_ENGINES_KEY} className=\"matcher-page__item\">\n              {!requestId && <span>Click «Match All» button to receive results...</span>}\n              {requestId && <span>Evaluating...</span>}\n            </li>\n          )}\n          {results.length > 0 && results.map(({engineValue, matches, error}) => {\n            let subtitle = ``;\n            if (error) {\n              subtitle = `Error`;\n            } else if (matches.length === 0) {\n              subtitle = `No matches found`;\n            } else {\n              subtitle = `Matches`;\n            }\n\n            const engine = findEngineByValue(engineValue);\n\n            return (\n              <li key={engineValue} className=\"matcher-page__item\">\n                <h2 className=\"matcher-page__item-title\">{engine ? engine.title : engineValue} - {subtitle}</h2>\n                {error && <>\n                  <span>{error.message}</span>\n                </>}\n                {!error && matches.length > 0 && <>\n                  <ol>\n                    {matches.map((match, matchIndex) => (\n                      <li key={matchIndex}>&ldquo;{match.substring}&ldquo;</li>\n                    ))}\n                  </ol>\n                </>}\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    </main>\n  </>;\n};\n\nexport {MatcherPage};\n","export const localMatchAll = (engineValue, text, patternValue, flagsValue) => {\n  try {\n    const regexp = new RegExp(patternValue, `${flagsValue}g`);\n    const it = text.matchAll(regexp);\n    const results = Array.from(it);\n    const matches = results.map((result) => ({\n      index: result.index,\n      substring: result[0],\n    }));\n    return {engineValue, matches};\n  } catch (exception) {\n    return {engineValue, error: {message: exception.message}};\n  }\n};\n","import React from 'react';\nimport {Link} from 'react-router-dom';\n\nimport {LocalPath} from '../../constants/local-path';\n\nconst NotFoundPage = () => {\n  return <>\n    <main className=\"not-found-page\">\n      <h1>Страница не найдена</h1>\n      <Link className=\"page-link\" to={LocalPath.INDEX}>Вернуться на главную страницу</Link>\n    </main>\n  </>;\n};\n\nexport {NotFoundPage};\n","import React from 'react';\nimport {Route, Switch} from 'react-router-dom';\n\nimport {MatcherPage} from '../matcher-page/matcher-page';\nimport {NotFoundPage} from '../not-found-page/not-found-page';\n\nimport {LocalPath} from '../../constants/local-path';\n\nconst App = () => {\n  return <>\n    <Switch>\n      <Route exact path={LocalPath.MATCHER}>\n        <MatcherPage/>\n      </Route>\n      <Route>\n        <NotFoundPage/>\n      </Route>\n    </Switch>\n  </>;\n};\n\nexport {App};\n","import React, {StrictMode} from 'react';\nimport ReactDOM from 'react-dom';\nimport {HashRouter as Router} from 'react-router-dom';\n\nimport {App} from './components/app/app';\n\nimport './index.scss';\n\nReactDOM.render((\n  <StrictMode>\n    <Router>\n      <App/>\n    </Router>\n  </StrictMode>\n), document.querySelector(`#root`));\n\n"],"sourceRoot":""}