{"version":3,"sources":["constants/local-path.js","constants/engine.js","helpers/match-helpers.js","shared/helpers/id-helpers.js","providers/match-provider.js","providers/engines-store.js","components/matcher-page/matcher-page.jsx","components/not-found-page/not-found-page.jsx","components/app/app.jsx","index.js","shared/helpers/date-helpers.js"],"names":["LocalPath","INDEX","MATCHER","MATCH_ALL","Engine","BROWSER_JS","title","value","NODE_JS","PHP","PYTHON","RUBY","DOTNET","JVM","GO","RUST","PCRE1","PCRE2","ENGINES","Object","values","findEngineByValue","engineValue","find","engine","isEqual","require","groupResults","results","groups","result","it","matches","error","push","nanoid","formatTimestamp","matchProvider","constructor","this","_client","axios","create","timeout","buildURL","endpoint","requestId","engineValues","text","pattern","flagsValue","data","request","method","url","params","enginesStore","storage","key","_storage","_key","getEngines","defaultEngines","JSON","parse","getItem","map","filter","Boolean","_error","setEngines","newEngines","setItem","stringify","localStorage","EMPTY_RESULTS","Flag","IGNORE_CASE","SINGLE_LINE","MULTILINE","UNICODE","createToggle","Enumeration","toggledItem","previousItems","shouldExclude","includes","item","submitMatchAll","async","localEngineValue","remoteEngineValues","patternValue","startDate","Date","regexp","RegExp","matchAll","Array","from","performance","index","substring","exception","message","localMatchAll","length","remoteResults","getSubstrings","afterMatchIndex","substrings","match","MatcherPage","engines","React","useState","setText","setPattern","flags","setFlags","setResults","isStale","setStale","setRequestId","requestIdRef","useRef","useEffect","className","action","type","name","checked","onChange","disabled","rows","evt","currentTarget","htmlFor","id","flag","onClick","preventDefault","localRequestId","isSafe","generateId","join","current","then","localResults","undefined","catch","group","groupKey","groupText","subtitle","getClassName","Number","isFinite","formatTotalSeconds","matchIndex","substringIndex","NotFoundPage","to","App","exact","path","ReactDOM","render","document","querySelector","module","exports","formatDate","date","getFullYear","toString","getMonth","padStart","getDate","withMilliseconds","getHours","getMinutes","getSeconds","getMilliseconds","formatTimespan","totalMilliseconds","milliseconds","Math","floor","totalSeconds","seconds","totalMinutes","minutes"],"mappings":"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","file":"static/js/main.3200f67e.chunk.js","sourcesContent":["/** @enum */\nexport const LocalPath = {\n  INDEX: `/`,\n  MATCHER: `/`,\n  MATCH_ALL: `/match-all`\n};\n","/** @enum */\nconst Engine = {\n  BROWSER_JS: {\n    title: `JavaScript (browser)`,\n    value: `browser-js`,\n  },\n  NODE_JS: {\n    title: `JavaScript (node.js)`,\n    value: `node-js`,\n  },\n  PHP: {\n    title: `PHP`,\n    value: `php`,\n  },\n  PYTHON: {\n    title: `Python`,\n    value: `python`,\n  },\n  RUBY: {\n    title: `Ruby`,\n    value: `ruby`,\n  },\n  DOTNET: {\n    title: `.NET (C#)`,\n    value: `dotnet`,\n  },\n  JVM: {\n    title: `JVM (Kotlin)`,\n    value: `jvm`,\n  },\n  GO: {\n    title: `Go`,\n    value: `go`,\n  },\n  RUST: {\n    title: `Rust`,\n    value: `rust`,\n  },\n  PCRE1: {\n    title: `PCRE1 (C++)`,\n    value: `pcre1`,\n  },\n  PCRE2: {\n    title: `PCRE2 (C++)`,\n    value: `pcre2`,\n  },\n};\n\nconst ENGINES = Object.values(Engine);\n\nconst findEngineByValue = (engineValue) => {\n  return Object.values(Engine).find((engine) => engine.value === engineValue);\n};\n\nexport {\n  Engine,\n  ENGINES,\n  findEngineByValue,\n};\n","const isEqual = require(`lodash/isEqual`);\n\nexport const localMatchAll = (engineValue, text, patternValue, flagsValue) => {\n  const startDate = new Date();\n  try {\n    const regexp = new RegExp(patternValue, `${flagsValue}g`);\n    const it = text.matchAll(regexp);\n    const results = Array.from(it);\n    return {\n      engineValue,\n      performance: new Date() - startDate,\n      matches: results.map((result) => ({\n        index: result.index,\n        substring: result[0],\n      })),\n    };\n  } catch (exception) {\n    return {\n      engineValue,\n      performance: new Date() - startDate,\n      error: {message: exception.message},\n    };\n  }\n};\n\n/**\n * @param {Array<{engineValue, performance, matches, error}>} results\n * @return {Array<Array<{engineValue, performance, matches, error}>>}\n */\nexport const groupResults = (results) => {\n  const groups = [];\n\n  for (const result of results) {\n    const group = groups.find((it) => isEqual(it[0].matches, result.matches) && isEqual(it[0].error, result.error))\n      || groups[groups.push([]) - 1];\n\n    group.push(result);\n  }\n\n  return groups;\n};\n","const {nanoid} = require(`nanoid`);\n\nconst {formatTimestamp} = require(`./date-helpers`);\n\nconst generateId = ({isSafe = true}) => {\n  return isSafe\n    ? nanoid()\n    : formatTimestamp(new Date());\n};\n\nexport {\n  generateId,\n};\n","import axios from 'axios';\n\nconst REQUEST_TIMEOUT = 5000;\n\nclass MatchProvider {\n  constructor() {\n    this._client = axios.create({\n      timeout: REQUEST_TIMEOUT,\n    });\n  }\n\n  buildURL(endpoint) {\n    return `${process.env.REACT_APP_API_BASE_URL}/${endpoint}`;\n  }\n\n  /**\n   * @param {string} requestId\n   * @param {string[]} engineValues\n   * @param {string} text\n   * @param {string} pattern\n   * @param {string} flagsValue\n   * @return {Promise<{matches: {index: number, substring: string}[], error: {message: string}[]}>}\n   */\n  async matchAll(requestId, engineValues, text, pattern, flagsValue) {\n    const {data} = await this._client.request({\n      method: `post`,\n      url: this.buildURL(`match-all`),\n      params: {\n        requestId,\n      },\n      data: {\n        engineValues,\n        text,\n        pattern,\n        flagsValue,\n      },\n    });\n    return data.results;\n  }\n}\n\nexport const matchProvider = new MatchProvider();\n","import {ENGINES, findEngineByValue} from 'constants/engine';\n\nconst ENGINES_STORE_KEY = `regexes__engines`;\n\nclass EnginesStore {\n  /**\n   * @param {Storage} storage\n   * @param {string} key\n   */\n  constructor(storage, key) {\n    this._storage = storage;\n    this._key = key;\n  }\n\n  /**\n   * @param {Engine[]} defaultEngines\n   * @return {Engine[]}\n   */\n  getEngines(defaultEngines = ENGINES) {\n    try {\n      const engineValues = JSON.parse(this._storage.getItem(this._key));\n      return engineValues\n        .map((engineValue) => findEngineByValue(engineValue))\n        .filter(Boolean) || defaultEngines;\n    } catch (_error) {\n      return defaultEngines;\n    }\n  }\n\n  /**\n   * @param {Engine[]} newEngines\n   * @return {boolean}\n   */\n  setEngines(newEngines) {\n    try {\n      const engineValues = newEngines.map((engine) => engine.value);\n      this._storage.setItem(this._key, JSON.stringify(engineValues));\n      return true;\n    } catch (_error) {\n      return false;\n    }\n  }\n}\n\nexport const enginesStore = new EnginesStore(localStorage, ENGINES_STORE_KEY);\n","import React from 'react';\nimport getClassName from 'classnames';\n\nimport {LocalPath} from 'constants/local-path';\nimport {Engine, ENGINES, findEngineByValue} from 'constants/engine';\nimport {localMatchAll, groupResults} from 'helpers/match-helpers';\nimport {generateId} from 'shared/helpers/id-helpers';\nimport {formatTotalSeconds} from 'shared/helpers/date-helpers';\nimport {matchProvider} from 'providers/match-provider';\nimport {enginesStore} from 'providers/engines-store';\n\nconst ALL_ENGINES_KEY = `all`;\nconst REMOTE_ENGINES_KEY = `remote`;\nconst EMPTY_RESULTS = [];\n\n/** @enum */\nconst Flag = {\n  IGNORE_CASE: {\n    title: `Ignore Case`,\n    value: `i`,\n  },\n  SINGLE_LINE: {\n    title: `Single Line`,\n    value: `s`,\n  },\n  MULTILINE: {\n    title: `Multiline`,\n    value: `m`,\n  },\n  UNICODE: {\n    title: `Unicode`,\n    value: `u`,\n  },\n};\n\nconst createToggle = (Enumeration, toggledItem) => {\n  return (previousItems) => {\n    const shouldExclude = previousItems.includes(toggledItem);\n\n    return Object.values(Enumeration).filter((item) => {\n      return shouldExclude\n        ? (previousItems.includes(item) && item !== toggledItem)\n        : (previousItems.includes(item) || item === toggledItem);\n    });\n  };\n};\n\nconst submitMatchAll = async (requestId, engineValues, text, pattern, flagsValue) => {\n  const localEngineValue = Engine.BROWSER_JS.value;\n  const remoteEngineValues = engineValues.filter((engineValue) => engineValue !== Engine.BROWSER_JS.value);\n\n  const results = [];\n  if (engineValues.includes(localEngineValue)) {\n    const result = localMatchAll(localEngineValue, text, pattern, flagsValue);\n    results.push({...result, text});\n  }\n  if (remoteEngineValues.length > 0) {\n    try {\n      const remoteResults = await matchProvider.matchAll(requestId, remoteEngineValues, text, pattern, flagsValue);\n      results.push(...remoteResults.map((result) => ({...result, text})));\n    } catch (exception) {\n      results.push({engineValue: REMOTE_ENGINES_KEY, error: {message: exception.message}});\n    }\n  }\n  return results;\n};\n\nconst getSubstrings = (text, matches) => {\n  if (matches.length === 0) {\n    return [text];\n  }\n  let afterMatchIndex = 0;\n  const substrings = [];\n  for (const match of matches) {\n    substrings.push(text.substring(afterMatchIndex, match.index), match.substring);\n    afterMatchIndex = match.index + match.substring.length;\n  }\n  substrings.push(text.substring(afterMatchIndex));\n  return substrings;\n};\n\nconst MatcherPage = () => {\n  const [engines, setEngines] = React.useState(ENGINES);\n  const [text, setText] = React.useState(``);\n  const [pattern, setPattern] = React.useState(``);\n  const [flags, setFlags] = React.useState([]);\n  const [results, setResults] = React.useState(EMPTY_RESULTS);\n  const [isStale, setStale] = React.useState(false);\n  const [requestId, setRequestId] = React.useState();\n  const requestIdRef = React.useRef();\n\n  const onEnginesChange = (toggledEngine) => {\n    setEngines(createToggle(Engine, toggledEngine));\n  };\n\n  const onFlagsChange = (toggledFlag) => {\n    setFlags(createToggle(Flag, toggledFlag));\n  };\n\n  const onSubmitClick = (evt) => {\n    evt.preventDefault();\n\n    const localRequestId = generateId({isSafe: false});\n    const engineValues = engines.map((engine) => engine.value);\n    const flagsValue = flags.map((flag) => flag.value).join(``);\n\n    setRequestId(requestIdRef.current = localRequestId);\n    setStale(true);\n\n    submitMatchAll(localRequestId, engineValues, text, pattern, flagsValue)\n      .then((localResults) => {\n        if (requestIdRef.current === localRequestId) {\n          setResults(localResults);\n          setStale(false);\n          setRequestId(requestIdRef.current = undefined);\n        }\n      })\n      .catch(() => {\n        if (requestIdRef.current === localRequestId) {\n          setRequestId(requestIdRef.current = undefined);\n        }\n      });\n  };\n\n  React.useEffect(() => {\n    setEngines(enginesStore.getEngines());\n  }, []);\n\n  React.useEffect(() => {\n    enginesStore.setEngines(engines);\n  }, [engines]);\n\n  React.useEffect(() => {\n    setStale(true);\n  }, [text, pattern, flags]);\n\n  return <>\n    <main className=\"matcher-page\">\n      <h1>Regular Expression Pattern Matcher</h1>\n\n      <div className=\"matcher-page__inner\">\n        <form method=\"post\" action={LocalPath.MATCH_ALL}>\n          <fieldset className=\"matcher-page__item\">\n            <legend className=\"matcher-page__engine-title\">Engines</legend>\n            <div className=\"matcher-page__engines-inner\">\n              {Object.values(Engine).map((engine) => {\n                return (\n                  <label key={engine.value} className=\"matcher-page__checkbox-label\">\n                    <input\n                      type=\"checkbox\"\n                      name=\"engines\"\n                      value={engine.value}\n                      checked={engines.includes(engine)}\n                      onChange={() => onEnginesChange(engine)}\n                      disabled={engine.disabled}\n                    />\n                    {engine.title}\n                  </label>\n                );\n              })}\n            </div>\n          </fieldset>\n\n          <div className=\"matcher-page__item\">\n            <label className=\"matcher-page__engine-title\">Text</label>\n            <textarea\n              name=\"text\"\n              rows=\"3\"\n              value={text}\n              onChange={(evt) => setText(evt.currentTarget.value)}\n            />\n          </div>\n\n          <div className=\"matcher-page__item\">\n            <label htmlFor=\"matcher-pattern\" className=\"matcher-page__engine-title\">Pattern (regular expression)</label>\n            <div className=\"matcher-page__pattern-inner\">\n              <input\n                id=\"matcher-pattern\"\n                type=\"text\"\n                name=\"pattern\"\n                value={pattern}\n                onChange={(evt) => setPattern(evt.currentTarget.value)}\n              />\n            </div>\n          </div>\n\n          <fieldset className=\"matcher-page__item\">\n            {Object.values(Flag).map((flag) => {\n              return (\n                <label key={flag.value} className=\"matcher-page__checkbox-label\">\n                  <input\n                    type=\"checkbox\"\n                    name=\"flags\"\n                    value={flag.value}\n                    checked={flags.includes(flag)}\n                    onChange={() => onFlagsChange(flag)}\n                  />\n                  {flag.title} (/{flag.value})\n                </label>\n              );\n            })}\n          </fieldset>\n\n          <button\n            type=\"submit\"\n            disabled={engines.length === 0}\n            onClick={onSubmitClick}\n          >\n            Match All\n          </button>\n        </form>\n\n        <ul className=\"matcher-page__results\">\n          {engines.length === 0 && (\n            <li key={ALL_ENGINES_KEY} className=\"matcher-page__item\">\n              <span>No engines checked. Please select one...</span>\n            </li>\n          )}\n          {engines.length > 0 && (results.length === 0 || isStale) && (\n            <li key={ALL_ENGINES_KEY} className=\"matcher-page__item\">\n              {!requestId && <span>Click «Match All» button to receive results...</span>}\n              {requestId && <span>Evaluating...</span>}\n            </li>\n          )}\n          {results.length > 0 && groupResults(results).map((group) => {\n            const {engineValue: groupKey, matches, error, text: groupText} = group[0];\n\n            let subtitle = ``;\n            if (error) {\n              subtitle = `Error`;\n            } else if (matches.length === 0) {\n              subtitle = `No matches found`;\n            } else {\n              subtitle = `Matches`;\n            }\n\n            return (\n              <li key={groupKey} className={getClassName(`matcher-page__item`, isStale && `stale`)}>\n                <h2 className=\"matcher-page__group-title\">\n                  {subtitle} {group.length > 1 && `(${group.length} engines)`}\n                </h2>\n                {group.map(({engineValue, performance}) => {\n                  const engine = findEngineByValue(engineValue);\n\n                  return (\n                    <h3 key={engineValue} className=\"matcher-page__group-item-title\">\n                      {engine ? engine.title : engineValue}\n                      {Number.isFinite(performance) &&\n                      <span\n                        className=\"matcher-page__result-performance\"\n                      > (in {formatTotalSeconds(performance)}s)</span>}\n                    </h3>\n                  );\n                })}\n                {error && <>\n                  <span>{error.message}</span>\n                </>}\n                {!error && matches.length > 0 && <>\n                  <ol>\n                    {matches.map((match, matchIndex) => (\n                      <li key={matchIndex}>&ldquo;{match.substring}&ldquo;</li>\n                    ))}\n                  </ol>\n                </>}\n                {!error && (\n                  <p className=\"matcher-page__text-with-matches\">\n                    {getSubstrings(groupText, matches).map((substring, substringIndex) => {\n                      return substringIndex % 2 === 1\n                        ? <b key={substringIndex}>{substring}</b>\n                        : <span key={substringIndex}>{substring}</span>;\n                    })}\n                  </p>\n                )}\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    </main>\n  </>;\n};\n\nexport {MatcherPage};\n","import React from 'react';\nimport {Link} from 'react-router-dom';\n\nimport {LocalPath} from '../../constants/local-path';\n\nconst NotFoundPage = () => {\n  return <>\n    <main className=\"not-found-page\">\n      <h1>Страница не найдена</h1>\n      <Link className=\"page-link\" to={LocalPath.INDEX}>Вернуться на главную страницу</Link>\n    </main>\n  </>;\n};\n\nexport {NotFoundPage};\n","import React from 'react';\nimport {Route, Switch} from 'react-router-dom';\n\nimport {MatcherPage} from '../matcher-page/matcher-page';\nimport {NotFoundPage} from '../not-found-page/not-found-page';\n\nimport {LocalPath} from '../../constants/local-path';\n\nconst App = () => {\n  return <>\n    <Switch>\n      <Route exact path={LocalPath.MATCHER}>\n        <MatcherPage/>\n      </Route>\n      <Route>\n        <NotFoundPage/>\n      </Route>\n    </Switch>\n  </>;\n};\n\nexport {App};\n","import React, {StrictMode} from 'react';\nimport ReactDOM from 'react-dom';\nimport {HashRouter as Router} from 'react-router-dom';\n\nimport {App} from './components/app/app';\n\nimport './index.scss';\n\nReactDOM.render((\n  <StrictMode>\n    <Router>\n      <App/>\n    </Router>\n  </StrictMode>\n), document.querySelector(`#root`));\n\n","function formatDate(date) {\n  return date.getFullYear().toString(10)\n    + `-` + (date.getMonth() + 1).toString(10).padStart(2, `0`)\n    + `-` + date.getDate().toString(10).padStart(2, `0`);\n}\n\nfunction formatTimestamp(date, withMilliseconds) {\n  if (typeof (withMilliseconds) === `undefined`) {\n    withMilliseconds = true;\n  }\n  return date.getFullYear().toString(10)\n    + `-` + (date.getMonth() + 1).toString(10).padStart(2, `0`)\n    + `-` + date.getDate().toString(10).padStart(2, `0`)\n    + ` ` + date.getHours().toString(10).padStart(2, `0`)\n    + `:` + date.getMinutes().toString(10).padStart(2, `0`)\n    + `:` + date.getSeconds().toString(10).padStart(2, `0`)\n    + (withMilliseconds ? (`.` + date.getMilliseconds().toString(10).padStart(3, `0`)) : ``);\n}\n\nfunction formatTimespan(totalMilliseconds) {\n  const milliseconds = Math.floor(totalMilliseconds % 1000);\n  const totalSeconds = Math.floor(totalMilliseconds / 1000);\n  const seconds = totalSeconds % 60;\n  const totalMinutes = Math.floor(totalSeconds / 60);\n  const minutes = totalMinutes % 60;\n  const totalHours = Math.floor(totalMinutes / 60);\n\n  return totalHours.toString().padStart(2, 0)\n    + `:` + minutes.toString().padStart(2, 0)\n    + `:` + seconds.toString().padStart(2, 0)\n    + `.` + milliseconds.toString().padStart(3, 0);\n}\n\nfunction formatTotalSeconds(totalMilliseconds) {\n  const milliseconds = Math.floor(totalMilliseconds % 1000);\n  const totalSeconds = Math.floor(totalMilliseconds / 1000);\n\n  return totalSeconds.toString()\n    + `.` + milliseconds.toString().padStart(3, 0);\n}\n\nmodule.exports = {\n  formatDate,\n  formatTimestamp,\n  formatTimespan,\n  formatTotalSeconds,\n};\n"],"sourceRoot":""}