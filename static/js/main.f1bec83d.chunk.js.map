{"version":3,"sources":["constants/local-path.js","components/matcher-page/matcher-page.jsx","components/not-found-page/not-found-page.jsx","components/app/app.jsx","index.js"],"names":["LocalPath","INDEX","MATCHER","MATCH_ALL","Engine","BROWSER_JS","title","value","NODE_JS","disabled","PHP","Flag","IGNORE_CASE","SINGLE_LINE","MULTILINE","createToggle","Enumeration","toggledItem","previousItems","shouldExclude","includes","Object","values","filter","item","MatcherPage","engines","setEngines","React","useState","text","setText","pattern","setPattern","flags","setFlags","shouldShowResults","setShowResults","matches","setMatches","error","setError","className","method","action","map","engine","type","name","checked","readOnly","rows","onChange","evt","currentTarget","htmlFor","id","flag","onClick","preventDefault","regexp","RegExp","join","it","matchAll","Array","from","exception","message","length","match","matchIndex","NotFoundPage","to","App","exact","path","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.f1bec83d.chunk.js","sourcesContent":["/** @enum */\nexport const LocalPath = {\n  INDEX: `/`,\n  MATCHER: `/`,\n  MATCH_ALL: `/match-all`\n};\n","import React from 'react';\n\nimport {LocalPath} from 'constants/local-path';\n\n/** @enum */\nconst Engine = {\n  BROWSER_JS: {\n    title: `JavaScript (browser)`,\n    value: `browser-js`,\n  },\n  NODE_JS: {\n    title: `JavaScript (node.js)`,\n    value: `node-js`,\n    disabled: true,\n  },\n  PHP: {\n    title: `PHP`,\n    value: `php`,\n    disabled: true,\n  },\n};\n\n/** @enum */\nconst Flag = {\n  IGNORE_CASE: {\n    title: `Ignore Case`,\n    value: `i`,\n  },\n  SINGLE_LINE: {\n    title: `Single Line`,\n    value: `s`,\n  },\n  MULTILINE: {\n    title: `Multiline`,\n    value: `m`,\n  },\n};\n\nconst createToggle = (Enumeration, toggledItem) => {\n  return (previousItems) => {\n    const shouldExclude = previousItems.includes(toggledItem);\n\n    return Object.values(Enumeration).filter((item) => {\n      return shouldExclude\n        ? (previousItems.includes(item) && item !== toggledItem)\n        : (previousItems.includes(item) || item === toggledItem);\n    });\n  };\n};\n\nconst MatcherPage = () => {\n  const [engines, setEngines] = React.useState([Engine.BROWSER_JS]);\n  const [text, setText] = React.useState(``);\n  const [pattern, setPattern] = React.useState(``);\n  const [flags, setFlags] = React.useState([]);\n  const [shouldShowResults, setShowResults] = React.useState(false);\n  const [matches, setMatches] = React.useState([]);\n  const [error, setError] = React.useState();\n\n  /* eslint-disable no-unused-vars */\n  const onEnginesChange = (toggledEngine) => {\n    setEngines(createToggle(Engine, toggledEngine));\n  };\n  /* eslint-enable no-unused-vars */\n\n  const onFlagsChange = (toggledFlag) => {\n    setFlags(createToggle(Flag, toggledFlag));\n  };\n\n  const onSubmitClick = (evt) => {\n    evt.preventDefault();\n    setShowResults(false);\n    setError();\n    setMatches([]);\n\n    try {\n      const regexp = new RegExp(pattern, `g` + flags.map((flag) => flag.value).join(``));\n      const it = text.matchAll(regexp);\n      setMatches(Array.from(it));\n    } catch (exception) {\n      setError(exception);\n    }\n\n    setShowResults(true);\n  };\n\n  return <>\n    <main className=\"matcher-page\">\n      <h1>Regular Expression Pattern Matcher</h1>\n\n      <form method=\"post\" action={LocalPath.MATCH_ALL}>\n        <fieldset className=\"matcher-page__item\">\n          <legend className=\"matcher-page__item-title\">Engine</legend>\n          {Object.values(Engine).map((engine) => {\n            return (\n              <label key={engine.value} className=\"matcher-page__checkbox-label\">\n                <input\n                  type=\"checkbox\"\n                  name=\"engines\"\n                  value={engine.value}\n                  checked={engines.includes(engine)}\n                  readOnly\n                  disabled={engine.disabled}\n                />\n                {engine.title}\n              </label>\n            );\n          })}\n        </fieldset>\n\n        <div className=\"matcher-page__item\">\n          <label className=\"matcher-page__item-title\">Text</label>\n          <textarea\n            name=\"text\"\n            rows=\"3\"\n            value={text}\n            onChange={(evt) => setText(evt.currentTarget.value)}\n          />\n        </div>\n\n        <div className=\"matcher-page__item\">\n          <label htmlFor=\"matcher-pattern\" className=\"matcher-page__item-title\">Pattern (regular expression)</label>\n          <div className=\"matcher-page__pattern-inner\">\n            <input\n              id=\"matcher-pattern\"\n              type=\"text\"\n              name=\"pattern\"\n              value={pattern}\n              onChange={(evt) => setPattern(evt.currentTarget.value)}\n            />\n          </div>\n        </div>\n\n        <fieldset className=\"matcher-page__item\">\n          {Object.values(Flag).map((flag) => {\n            return (\n              <label key={flag.value} className=\"matcher-page__checkbox-label\">\n                <input\n                  type=\"checkbox\"\n                  name=\"flags\"\n                  value={flag.value}\n                  checked={flags.includes(flag)}\n                  onChange={() => onFlagsChange(flag)}\n                />\n                {flag.title} (/{flag.value})\n              </label>\n            );\n          })}\n        </fieldset>\n\n        <button type=\"submit\" onClick={onSubmitClick}>Match All</button>\n\n        {shouldShowResults && error && (\n          <div className=\"matcher-page__item\">\n            <span className=\"matcher-page__item-title\">Error</span>\n            <span>{error.message}</span>\n          </div>\n        )}\n\n        {shouldShowResults && !error && matches.length === 0 && (\n          <div className=\"matcher-page__item\">\n            <span className=\"matcher-page__item-title\">No matches found. Try to adjust your search...</span>\n          </div>\n        )}\n\n        {shouldShowResults && !error && matches.length > 0 && (\n          <div className=\"matcher-page__item\">\n            <span className=\"matcher-page__item-title\">Matches</span>\n            <ol>\n              {matches.map((match, matchIndex) => (\n                <li key={matchIndex}>&ldquo;{match[0]}&ldquo;</li>\n              ))}\n            </ol>\n          </div>\n        )}\n      </form>\n    </main>\n  </>;\n};\n\nexport {MatcherPage};\n","import React from 'react';\nimport {Link} from 'react-router-dom';\n\nimport {LocalPath} from '../../constants/local-path';\n\nconst NotFoundPage = () => {\n  return <>\n    <main className=\"not-found-page\">\n      <h1>Страница не найдена</h1>\n      <Link className=\"page-link\" to={LocalPath.INDEX}>Вернуться на главную страницу</Link>\n    </main>\n  </>;\n};\n\nexport {NotFoundPage};\n","import React from 'react';\nimport {Route, Switch} from 'react-router-dom';\n\nimport {MatcherPage} from '../matcher-page/matcher-page';\nimport {NotFoundPage} from '../not-found-page/not-found-page';\n\nimport {LocalPath} from '../../constants/local-path';\n\nconst App = () => {\n  return <>\n    <Switch>\n      <Route exact path={LocalPath.MATCHER}>\n        <MatcherPage/>\n      </Route>\n      <Route>\n        <NotFoundPage/>\n      </Route>\n    </Switch>\n  </>;\n};\n\nexport {App};\n","import React, {StrictMode} from 'react';\nimport ReactDOM from 'react-dom';\nimport {HashRouter as Router} from 'react-router-dom';\n\nimport {App} from './components/app/app';\n\nimport './index.scss';\n\nReactDOM.render((\n  <StrictMode>\n    <Router>\n      <App/>\n    </Router>\n  </StrictMode>\n), document.querySelector(`#root`));\n\n"],"sourceRoot":""}