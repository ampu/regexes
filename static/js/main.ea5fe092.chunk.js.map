{"version":3,"sources":["constants/local-path.js","providers/match-provider.js","components/matcher-page/matcher-page.jsx","helpers/match-helpers.js","components/not-found-page/not-found-page.jsx","components/app/app.jsx","index.js"],"names":["LocalPath","INDEX","MATCHER","MATCH_ALL","matchProvider","constructor","this","_client","axios","create","timeout","engineValues","text","pattern","flagsValue","data","get","params","Engine","BROWSER_JS","title","value","NODE_JS","PHP","Flag","IGNORE_CASE","SINGLE_LINE","MULTILINE","createToggle","Enumeration","toggledItem","previousItems","shouldExclude","includes","Object","values","filter","item","MatcherPage","engines","setEngines","React","useState","setText","setPattern","flags","setFlags","shouldShowResults","setShowResults","matches","setMatches","error","setError","className","method","action","map","engine","type","name","checked","onChange","disabled","rows","evt","currentTarget","htmlFor","id","flag","onClick","preventDefault","join","_","regexp","RegExp","it","matchAll","Array","from","match","e","localMatchAll","length","then","catch","exception","finally","message","matchIndex","NotFoundPage","to","App","exact","path","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.ea5fe092.chunk.js","sourcesContent":["/** @enum */\nexport const LocalPath = {\n  INDEX: `/`,\n  MATCHER: `/`,\n  MATCH_ALL: `/match-all`\n};\n","import axios from 'axios';\n\nconst REQUEST_TIMEOUT = 5000;\n\nclass MatchProvider {\n  constructor() {\n    this._client = axios.create({\n      timeout: REQUEST_TIMEOUT,\n    });\n  }\n\n  /**\n   * @param {string[]} engineValues\n   * @param {string} text\n   * @param {string} pattern\n   * @param {string} flagsValue\n   * @return {Promise<{matches: string[], error: {message: string}}>}\n   */\n  async matchAll(engineValues, text, pattern, flagsValue) {\n    const {data} = await this._client.get(`http://localhost:3001/match-all`, {\n      params: {\n        engineValues,\n        text,\n        pattern,\n        flagsValue,\n      },\n    });\n    return data;\n  }\n}\n\nexport const matchProvider = new MatchProvider();\n","import React from 'react';\n\nimport {LocalPath} from 'constants/local-path';\nimport {localMatchAll} from 'helpers/match-helpers';\nimport {matchProvider} from 'providers/match-provider';\n\n/** @enum */\nconst Engine = {\n  BROWSER_JS: {\n    title: `JavaScript (browser)`,\n    value: `browser-js`,\n  },\n  NODE_JS: {\n    title: `JavaScript (node.js)`,\n    value: `node-js`,\n  },\n  PHP: {\n    title: `PHP`,\n    value: `php`,\n  },\n};\n\n/** @enum */\nconst Flag = {\n  IGNORE_CASE: {\n    title: `Ignore Case`,\n    value: `i`,\n  },\n  SINGLE_LINE: {\n    title: `Single Line`,\n    value: `s`,\n  },\n  MULTILINE: {\n    title: `Multiline`,\n    value: `m`,\n  },\n};\n\nconst createToggle = (Enumeration, toggledItem) => {\n  return (previousItems) => {\n    const shouldExclude = previousItems.includes(toggledItem);\n\n    return Object.values(Enumeration).filter((item) => {\n      return shouldExclude\n        ? (previousItems.includes(item) && item !== toggledItem)\n        : (previousItems.includes(item) || item === toggledItem);\n    });\n  };\n};\n\nconst MatcherPage = () => {\n  const [engines, setEngines] = React.useState([Engine.PHP]);\n  const [text, setText] = React.useState(``);\n  const [pattern, setPattern] = React.useState(``);\n  const [flags, setFlags] = React.useState([]);\n  const [shouldShowResults, setShowResults] = React.useState(false);\n  const [matches, setMatches] = React.useState([]);\n  const [error, setError] = React.useState();\n\n  const onEnginesChange = (toggledEngine) => {\n    setEngines(createToggle(Engine, toggledEngine));\n  };\n\n  const onFlagsChange = (toggledFlag) => {\n    setFlags(createToggle(Flag, toggledFlag));\n  };\n\n  const onSubmitClick = (evt) => {\n    evt.preventDefault();\n    setShowResults(false);\n    setError();\n    setMatches([]);\n\n    const flagsValue = flags.map((flag) => flag.value).join(``);\n\n    /* eslint-disable */\n\n    if (engines.includes(Engine.BROWSER_JS)) {\n      const data = localMatchAll(Engine.BROWSER_JS.value, text, pattern, flagsValue);\n\n      setMatches(data.matches);\n      setError(data.error);\n      setShowResults(true);\n    }\n\n    const engineValues = engines\n      .filter((engine) => engine !== Engine.BROWSER_JS)\n      .map((engine) => engine.value);\n\n    if (engineValues.length > 0) {\n      matchProvider.matchAll(engineValues, text, pattern, flagsValue)\n        .then(([data]) => {\n          setMatches(data.matches);\n          setError(data.error);\n        })\n        .catch((exception) => {\n          setError(exception);\n        })\n        .finally(() => {\n          setShowResults(true);\n        });\n    }\n  };\n\n  return <>\n    <main className=\"matcher-page\">\n      <h1>Regular Expression Pattern Matcher</h1>\n\n      <form method=\"post\" action={LocalPath.MATCH_ALL}>\n        <fieldset className=\"matcher-page__item\">\n          <legend className=\"matcher-page__item-title\">Engine</legend>\n          {Object.values(Engine).map((engine) => {\n            return (\n              <label key={engine.value} className=\"matcher-page__checkbox-label\">\n                <input\n                  type=\"checkbox\"\n                  name=\"engines\"\n                  value={engine.value}\n                  checked={engines.includes(engine)}\n                  onChange={() => onEnginesChange(engine)}\n                  disabled={engine.disabled}\n                />\n                {engine.title}\n              </label>\n            );\n          })}\n        </fieldset>\n\n        <div className=\"matcher-page__item\">\n          <label className=\"matcher-page__item-title\">Text</label>\n          <textarea\n            name=\"text\"\n            rows=\"3\"\n            value={text}\n            onChange={(evt) => setText(evt.currentTarget.value)}\n          />\n        </div>\n\n        <div className=\"matcher-page__item\">\n          <label htmlFor=\"matcher-pattern\" className=\"matcher-page__item-title\">Pattern (regular expression)</label>\n          <div className=\"matcher-page__pattern-inner\">\n            <input\n              id=\"matcher-pattern\"\n              type=\"text\"\n              name=\"pattern\"\n              value={pattern}\n              onChange={(evt) => setPattern(evt.currentTarget.value)}\n            />\n          </div>\n        </div>\n\n        <fieldset className=\"matcher-page__item\">\n          {Object.values(Flag).map((flag) => {\n            return (\n              <label key={flag.value} className=\"matcher-page__checkbox-label\">\n                <input\n                  type=\"checkbox\"\n                  name=\"flags\"\n                  value={flag.value}\n                  checked={flags.includes(flag)}\n                  onChange={() => onFlagsChange(flag)}\n                />\n                {flag.title} (/{flag.value})\n              </label>\n            );\n          })}\n        </fieldset>\n\n        <button type=\"submit\" onClick={onSubmitClick}>Match All</button>\n\n        {shouldShowResults && error && (\n          <div className=\"matcher-page__item\">\n            <span className=\"matcher-page__item-title\">Error</span>\n            <span>{error.message}</span>\n          </div>\n        )}\n\n        {shouldShowResults && !error && matches.length === 0 && (\n          <div className=\"matcher-page__item\">\n            <span className=\"matcher-page__item-title\">No matches found. Try to adjust your search...</span>\n          </div>\n        )}\n\n        {shouldShowResults && !error && matches.length > 0 && (\n          <div className=\"matcher-page__item\">\n            <span className=\"matcher-page__item-title\">Matches</span>\n            <ol>\n              {matches.map((match, matchIndex) => (\n                <li key={matchIndex}>&ldquo;{match[0]}&ldquo;</li>\n              ))}\n            </ol>\n          </div>\n        )}\n      </form>\n    </main>\n  </>;\n};\n\nexport {MatcherPage};\n","export const localMatchAll = (_, text, pattern, flagsValue) => {\n  try {\n    const regexp = new RegExp(pattern, `${flagsValue}g`);\n    const it = text.matchAll(regexp);\n    return {matches: Array.from(it).map((match) => match[0])};\n  } catch (e) {\n    return {error: e};\n  }\n};\n","import React from 'react';\nimport {Link} from 'react-router-dom';\n\nimport {LocalPath} from '../../constants/local-path';\n\nconst NotFoundPage = () => {\n  return <>\n    <main className=\"not-found-page\">\n      <h1>Страница не найдена</h1>\n      <Link className=\"page-link\" to={LocalPath.INDEX}>Вернуться на главную страницу</Link>\n    </main>\n  </>;\n};\n\nexport {NotFoundPage};\n","import React from 'react';\nimport {Route, Switch} from 'react-router-dom';\n\nimport {MatcherPage} from '../matcher-page/matcher-page';\nimport {NotFoundPage} from '../not-found-page/not-found-page';\n\nimport {LocalPath} from '../../constants/local-path';\n\nconst App = () => {\n  return <>\n    <Switch>\n      <Route exact path={LocalPath.MATCHER}>\n        <MatcherPage/>\n      </Route>\n      <Route>\n        <NotFoundPage/>\n      </Route>\n    </Switch>\n  </>;\n};\n\nexport {App};\n","import React, {StrictMode} from 'react';\nimport ReactDOM from 'react-dom';\nimport {HashRouter as Router} from 'react-router-dom';\n\nimport {App} from './components/app/app';\n\nimport './index.scss';\n\nReactDOM.render((\n  <StrictMode>\n    <Router>\n      <App/>\n    </Router>\n  </StrictMode>\n), document.querySelector(`#root`));\n\n"],"sourceRoot":""}