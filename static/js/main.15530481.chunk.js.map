{"version":3,"sources":["constants/local-path.js","providers/match-provider.js","components/matcher-page/matcher-page.jsx","helpers/match-helpers.js","components/not-found-page/not-found-page.jsx","components/app/app.jsx","index.js"],"names":["LocalPath","INDEX","MATCHER","MATCH_ALL","matchProvider","constructor","this","_client","axios","create","timeout","engineValues","text","pattern","flagsValue","data","get","params","Engine","BROWSER_JS","title","value","NODE_JS","PHP","Flag","IGNORE_CASE","SINGLE_LINE","MULTILINE","createToggle","Enumeration","toggledItem","previousItems","shouldExclude","includes","Object","values","filter","item","submitMatchAll","async","localEngineValue","remoteEngineValues","engineValue","results","result","patternValue","regexp","RegExp","it","matchAll","matches","Array","from","exception","error","message","localMatchAll","push","length","remoteResults","MatcherPage","engines","setEngines","React","useState","setText","setPattern","flags","setFlags","setResults","setPending","className","method","action","map","engine","type","name","checked","onChange","disabled","rows","evt","currentTarget","htmlFor","id","flag","onClick","preventDefault","join","then","matchAllResults","finally","subtitle","match","matchIndex","NotFoundPage","to","App","exact","path","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.15530481.chunk.js","sourcesContent":["/** @enum */\nexport const LocalPath = {\n  INDEX: `/`,\n  MATCHER: `/`,\n  MATCH_ALL: `/match-all`\n};\n","import axios from 'axios';\n\nconst REQUEST_TIMEOUT = 5000;\n\nclass MatchProvider {\n  constructor() {\n    this._client = axios.create({\n      timeout: REQUEST_TIMEOUT,\n    });\n  }\n\n  /**\n   * @param {string[]} engineValues\n   * @param {string} text\n   * @param {string} pattern\n   * @param {string} flagsValue\n   * @return {Promise<{matches: string[], error: {message: string}}>}\n   */\n  async matchAll(engineValues, text, pattern, flagsValue) {\n    const {data} = await this._client.get(`http://localhost:3001/match-all`, {\n      params: {\n        engineValues,\n        text,\n        pattern,\n        flagsValue,\n      },\n    });\n    return data;\n  }\n}\n\nexport const matchProvider = new MatchProvider();\n","import React from 'react';\n\nimport {LocalPath} from 'constants/local-path';\nimport {localMatchAll} from 'helpers/match-helpers';\nimport {matchProvider} from 'providers/match-provider';\n\nconst REMOTE_ENGINES_GROUP = `remote`;\n\n/** @enum */\nconst Engine = {\n  BROWSER_JS: {\n    title: `JavaScript (browser)`,\n    value: `browser-js`,\n  },\n  NODE_JS: {\n    title: `JavaScript (node.js)`,\n    value: `node-js`,\n  },\n  PHP: {\n    title: `PHP`,\n    value: `php`,\n  },\n};\n\n/** @enum */\nconst Flag = {\n  IGNORE_CASE: {\n    title: `Ignore Case`,\n    value: `i`,\n  },\n  SINGLE_LINE: {\n    title: `Single Line`,\n    value: `s`,\n  },\n  MULTILINE: {\n    title: `Multiline`,\n    value: `m`,\n  },\n};\n\nconst createToggle = (Enumeration, toggledItem) => {\n  return (previousItems) => {\n    const shouldExclude = previousItems.includes(toggledItem);\n\n    return Object.values(Enumeration).filter((item) => {\n      return shouldExclude\n        ? (previousItems.includes(item) && item !== toggledItem)\n        : (previousItems.includes(item) || item === toggledItem);\n    });\n  };\n};\n\nconst submitMatchAll = async (engineValues, text, pattern, flagsValue) => {\n  const localEngineValue = Engine.BROWSER_JS.value;\n  const remoteEngineValues = engineValues.filter((engineValue) => engineValue !== Engine.BROWSER_JS.value);\n\n  const results = [];\n  if (engineValues.includes(localEngineValue)) {\n    const result = localMatchAll(localEngineValue, text, pattern, flagsValue);\n    results.push(result);\n  }\n  if (remoteEngineValues.length > 0) {\n    try {\n      const remoteResults = await matchProvider.matchAll(remoteEngineValues, text, pattern, flagsValue);\n      results.push(...remoteResults);\n    } catch (exception) {\n      results.push({engineValue: REMOTE_ENGINES_GROUP, error: {message: exception.message}});\n    }\n  }\n  return results;\n};\n\nconst MatcherPage = () => {\n  const [engines, setEngines] = React.useState([Engine.BROWSER_JS]);\n  const [text, setText] = React.useState(``);\n  const [pattern, setPattern] = React.useState(``);\n  const [flags, setFlags] = React.useState([]);\n  const [results, setResults] = React.useState([]);\n  const [, setPending] = React.useState(false);\n\n  const onEnginesChange = (toggledEngine) => {\n    setEngines(createToggle(Engine, toggledEngine));\n  };\n\n  const onFlagsChange = (toggledFlag) => {\n    setFlags(createToggle(Flag, toggledFlag));\n  };\n\n  const onSubmitClick = (evt) => {\n    evt.preventDefault();\n\n    const engineValues = engines.map((engine) => engine.value);\n    const flagsValue = flags.map((flag) => flag.value).join(``);\n\n    setPending(true);\n    setResults([]);\n\n    submitMatchAll(engineValues, text, pattern, flagsValue)\n      .then((matchAllResults) => {\n        setResults(matchAllResults);\n      })\n      .finally(() => {\n        setPending(false);\n      });\n  };\n\n  return <>\n    <main className=\"matcher-page\">\n      <h1>Regular Expression Pattern Matcher</h1>\n\n      <form method=\"post\" action={LocalPath.MATCH_ALL}>\n        <fieldset className=\"matcher-page__item\">\n          <legend className=\"matcher-page__item-title\">Engine</legend>\n          {Object.values(Engine).map((engine) => {\n            return (\n              <label key={engine.value} className=\"matcher-page__checkbox-label\">\n                <input\n                  type=\"checkbox\"\n                  name=\"engines\"\n                  value={engine.value}\n                  checked={engines.includes(engine)}\n                  onChange={() => onEnginesChange(engine)}\n                  disabled={engine.disabled}\n                />\n                {engine.title}\n              </label>\n            );\n          })}\n        </fieldset>\n\n        <div className=\"matcher-page__item\">\n          <label className=\"matcher-page__item-title\">Text</label>\n          <textarea\n            name=\"text\"\n            rows=\"3\"\n            value={text}\n            onChange={(evt) => setText(evt.currentTarget.value)}\n          />\n        </div>\n\n        <div className=\"matcher-page__item\">\n          <label htmlFor=\"matcher-pattern\" className=\"matcher-page__item-title\">Pattern (regular expression)</label>\n          <div className=\"matcher-page__pattern-inner\">\n            <input\n              id=\"matcher-pattern\"\n              type=\"text\"\n              name=\"pattern\"\n              value={pattern}\n              onChange={(evt) => setPattern(evt.currentTarget.value)}\n            />\n          </div>\n        </div>\n\n        <fieldset className=\"matcher-page__item\">\n          {Object.values(Flag).map((flag) => {\n            return (\n              <label key={flag.value} className=\"matcher-page__checkbox-label\">\n                <input\n                  type=\"checkbox\"\n                  name=\"flags\"\n                  value={flag.value}\n                  checked={flags.includes(flag)}\n                  onChange={() => onFlagsChange(flag)}\n                />\n                {flag.title} (/{flag.value})\n              </label>\n            );\n          })}\n        </fieldset>\n\n        <button type=\"submit\" onClick={onSubmitClick}>Match All</button>\n\n        {results.length > 0 && <>\n          <ul className=\"matcher-page__results\">\n            {results.map(({engineValue, matches, error}) => {\n              let subtitle = ``;\n              if (error) {\n                subtitle = `Error`;\n              } else if (matches.length === 0) {\n                subtitle = `No matches found`;\n              } else {\n                subtitle = `Matches`;\n              }\n              return (\n                <div key={engineValue} className=\"matcher-page__item\">\n                  <h2 className=\"matcher-page__item-title\">{engineValue} - {subtitle}</h2>\n                  {error && <>\n                    <span>{error.message}</span>\n                  </>}\n                  {!error && matches.length > 0 && <>\n                    <ol>\n                      {matches.map((match, matchIndex) => (\n                        <li key={matchIndex}>&ldquo;{match[0]}&ldquo;</li>\n                      ))}\n                    </ol>\n                  </>}\n                </div>\n              );\n            })}\n          </ul>\n        </>}\n      </form>\n    </main>\n  </>;\n};\n\nexport {MatcherPage};\n","export const localMatchAll = (engineValue, text, patternValue, flagsValue) => {\n  try {\n    const regexp = new RegExp(patternValue, `${flagsValue}g`);\n    const it = text.matchAll(regexp);\n    const matches = Array.from(it);\n    return {engineValue, matches};\n  } catch (exception) {\n    return {engineValue, error: {message: exception.message}};\n  }\n};\n","import React from 'react';\nimport {Link} from 'react-router-dom';\n\nimport {LocalPath} from '../../constants/local-path';\n\nconst NotFoundPage = () => {\n  return <>\n    <main className=\"not-found-page\">\n      <h1>Страница не найдена</h1>\n      <Link className=\"page-link\" to={LocalPath.INDEX}>Вернуться на главную страницу</Link>\n    </main>\n  </>;\n};\n\nexport {NotFoundPage};\n","import React from 'react';\nimport {Route, Switch} from 'react-router-dom';\n\nimport {MatcherPage} from '../matcher-page/matcher-page';\nimport {NotFoundPage} from '../not-found-page/not-found-page';\n\nimport {LocalPath} from '../../constants/local-path';\n\nconst App = () => {\n  return <>\n    <Switch>\n      <Route exact path={LocalPath.MATCHER}>\n        <MatcherPage/>\n      </Route>\n      <Route>\n        <NotFoundPage/>\n      </Route>\n    </Switch>\n  </>;\n};\n\nexport {App};\n","import React, {StrictMode} from 'react';\nimport ReactDOM from 'react-dom';\nimport {HashRouter as Router} from 'react-router-dom';\n\nimport {App} from './components/app/app';\n\nimport './index.scss';\n\nReactDOM.render((\n  <StrictMode>\n    <Router>\n      <App/>\n    </Router>\n  </StrictMode>\n), document.querySelector(`#root`));\n\n"],"sourceRoot":""}